'''
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
'''

import time

start = time.time()

# Test for pentagonal numbers from Wikipedia
def pentagonal(n):
    if (((24 * n + 1) ** 0.5) + 1) % 6 == 0:
        return True
    return False

pentagonal_numbers = []

i = 1

flag = True

while flag:
	pk = int((i * (3 * i - 1)) / 2)
	pentagonal_numbers.append(pk)
	for pj in pentagonal_numbers:
		if pentagonal(pk + pj) and pentagonal(pk - pj):
			print(pk - pj)
			flag = False
			break
	i += 1

end = time.time()

print(end - start) # Executed in 2.73 seconds