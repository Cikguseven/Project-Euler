'''
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten
pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70
− 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and
difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of
D?
'''

import time

start = time.time()

flag = True

n = 1

pentagonal_numbers = []


# Test for pentagonal numbers from Wikipedia
def pentagonal(n):
    if (((24 * n + 1) ** 0.5) + 1) % 6 == 0:
        return True
    return False


while flag:
    pk = int((n * (3 * n - 1)) / 2)
    pentagonal_numbers.append(pk)
    for pj in pentagonal_numbers:
        if pentagonal(pk + pj) and pentagonal(pk - pj):
            print(pk - pj)
            flag = False
            break
    n += 1

end = time.time()

# Executes in 1.66 seconds
print(end - start)
